spring.application.name=microStock

spring.datasource.url=jdbc:mySql://localhost:3306/stock_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

server.port=${PORT:0}

#Si se usa Eureka
#eureka.instance.instance-id=${spring.application.name}:${random.value}
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#Si se usa Consul
spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500

#Habilita el health indicator
resilience4j.circuitbreaker.instances.orderService.registerHealthIndicator=true

#
resilience4j.circuitbreaker.instances.orderService.eventConsumerBufferSize=10

#Regular automaticamente cuando limitar con un tope maximo la cantidad de llamados al microservicio
resilience4j.circuitbreaker.instances.orderService.automaticTransitionFromOpenToHalfOpenEnabled=true

#Porcentaje de error despues del cual se abre el circuito
resilience4j.circuitbreaker.instances.orderService.failureRateThreshold=50

#Numero minimo de llamados al microservicio para abrirse
resilience4j.circuitbreaker.instances.orderService.minimumNumberOfCalls=5

#Numero maximo de llamados al microservicio estando medio abierto
resilience4j.circuitbreaker.instances.orderService.permittedNumberOfCallsInHalfOpenState=3

#
resilience4j.circuitbreaker.instances.orderService.slidingWindowSize=10

#
resilience4j.circuitbreaker.instances.orderService.waitDurationInOpenState=5s

#
resilience4j.circuitbreaker.instances.orderService.slidingWindowType=COUNT_BASED

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#feign.hystrix.enabled=true
#management.endpoints.web.exposure.include=*
